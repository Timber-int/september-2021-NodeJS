{
  "swagger": "2.0",
  "info": {
    "title": "September 2021",
    "description": "Project documentation",
    "version": "0.1",
    "contact": {
      "email": "timoty01@ukr.net",
      "name": "Slobodianyk Artem"
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Login",
        "operationId": "login",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "email",
            "in": "body",
            "pattern": "timslovfoll@gmail.com",
            "required": true,
            "uniqueItems": true
          },
          {
            "type": "string",
            "name": "password",
            "in": "body",
            "pattern": "#$E12312Erwqe",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MTY2ODMsImV4cCI6MTY0OTkxNzU4M30.qg6iFhPDP2M9MQzYNycWM7nk1LtQxNTso5lpGyu6MD8"
                },
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MTY2ODMsImV4cCI6MTY1MDAwMzA4M30.GW1wP1suLkouGTCXZrHSLaz-uj-NBz9zC4Y_-yZevBY"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "description": "Successfully login response"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/registration": {
      "post": {
        "description": "Registration",
        "operationId": "registration",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "firstName",
            "in": "body",
            "pattern": "Semen",
            "required": true
          },
          {
            "type": "string",
            "name": "lastName",
            "in": "body",
            "pattern": "Orlov",
            "required": true
          },
          {
            "type": "number",
            "name": "age",
            "in": "body",
            "pattern": 56
          },
          {
            "type": "string",
            "name": "email",
            "in": "body",
            "pattern": "timslovfoll@gmail.com",
            "required": true,
            "uniqueItems": true
          },
          {
            "type": "string",
            "name": "password",
            "in": "body",
            "pattern": "#$E12312Erwqe",
            "required": true
          },
          {
            "type": "string",
            "name": "phone",
            "in": "body",
            "pattern": "+38099559693943",
            "required": true,
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MTY2ODMsImV4cCI6MTY0OTkxNzU4M30.qg6iFhPDP2M9MQzYNycWM7nk1LtQxNTso5lpGyu6MD8"
                },
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MTY2ODMsImV4cCI6MTY1MDAwMzA4M30.GW1wP1suLkouGTCXZrHSLaz-uj-NBz9zC4Y_-yZevBY"
                },
                "userId": {
                  "type": "number",
                  "example": 15
                },
                "userEmail": {
                  "type": "string",
                  "example": "timslovfoldl@gmail.com"
                }
              }
            },
            "description": "Successfully registration"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "description": "Logout",
        "operationId": "logout",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Use access_token"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "pattern": "We will be waiting for you later Stepan"
            },
            "description": "Successfully registration"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Refresh",
        "operationId": "refresh",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Use refresh_token"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MTY2ODMsImV4cCI6MTY0OTkxNzU4M30.qg6iFhPDP2M9MQzYNycWM7nk1LtQxNTso5lpGyu6MD8"
                },
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MTY2ODMsImV4cCI6MTY1MDAwMzA4M30.GW1wP1suLkouGTCXZrHSLaz-uj-NBz9zC4Y_-yZevBY"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "description": "Successfully refresh"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/forgot/password": {
      "post": {
        "description": "Forgot password",
        "operationId": "forgot/password",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "email",
            "in": "body",
            "pattern": "timslovfoll@gmail.com",
            "required": true,
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "actionToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE0LCJ1c2VyRW1haWwiOiJ0aW1zbG92Zm9sbEBnbWFpbC5jb20iLCJpYXQiOjE2NDk5MjcwMTQsImV4cCI6MTY1MDM1OTAxNH0.Id8v8ybg1ka9DqVaBhJqJyLaEWHlmBmM3Yb6GCYZf3M"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "description": "Successfully send message user who wont change your password"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/auth/forgot/password/set": {
      "post": {
        "description": "Set new password",
        "operationId": "forgot/password/set",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "password",
            "in": "body",
            "pattern": "#$E12312Erwqe",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Use action_token"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "pattern": "Stepan  password updated successfully"
            },
            "description": "Successfully change user password!!!"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/posts/": {
      "get": {
        "description": "getPosts",
        "operationId": "getPosts",
        "tags": [
          "Posts"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/post"
              }
            },
            "description": "Get all posts"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/posts/{id}/": {
      "get": {
        "operationId": "getPost",
        "description": "getPost",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "$ref": "#/definitions/post"
                }
              }
            },
            "description": "Get post by id"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "description": "createPost",
        "operationId": "createPost",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "title",
            "in": "body",
            "pattern": "Hello dear user great to see you again",
            "required": true,
            "uniqueItems": true
          },
          {
            "type": "string",
            "name": "text",
            "in": "body",
            "pattern": "Велика Британія запровадила кримінальне покарання проти будь-якого російського літака у її повітряному просторі",
            "required": true
          },
          {
            "type": "number",
            "name": "userId",
            "required": true,
            "in": "body",
            "description": "Foreign key for user"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "$ref": "#/definitions/post"
                }
              }
            },
            "description": "Create post"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "put": {
        "description": "updatePost",
        "operationId": "updatePost",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "type": "number",
            "name": "id",
            "in": "path",
            "required": true,
            "default": 2
          },
          {
            "type": "string",
            "name": "text",
            "pattern": "Велика Британія запровадила кримінальне покарання проти будь-якого російського літака у її повітряному просторі",
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "post": {
                  "$ref": "#/definitions/post"
                }
              }
            },
            "description": "Update post"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/comments/": {
      "get": {
        "description": "getAllComments",
        "operationId": "getAllComments",
        "tags": [
          "Comments"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/comment"
              }
            },
            "description": "getAllComments"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "description": "getCommentById",
        "operationId": "getCommentById",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "type": "number",
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "$ref": "#/definitions/comment"
                }
              }
            },
            "description": "getCommentById"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "description": "createComment",
        "operationId": "createComment",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "text",
            "required": true,
            "in": "body",
            "pattern": "All will by fine!!!"
          },
          {
            "type": "number",
            "name": "authorId",
            "in": "body",
            "required": true,
            "description": "Foreign key for User"
          },
          {
            "type": "number",
            "name": "postId",
            "in": "body",
            "required": true,
            "description": "Foreign key for Post"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "$ref": "#/definitions/comment"
                }
              }
            },
            "description": "createComments"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/commnets/action": {
      "post": {
        "description": "Choose action like or dislike",
        "operationId": "action",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "type": "number",
            "in": "body",
            "name": "commentId",
            "required": true
          },
          {
            "type": "string",
            "in": "body",
            "name": "action",
            "required": true,
            "description": "Set action like or dislike"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "pattern": "dislike is good deal!!!"
            },
            "description": "Choose action"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "getAllUsers",
        "operationId": "getAllUsers",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            },
            "description": "getAllUsers"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "description": "getUserByEmail",
        "operationId": "getUserByEmail",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "path",
            "name": "email",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "description": "getUserByEmail"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "deleteUserById",
        "operationId": "deleteUserById",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "type": "number",
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "example": "User deleted successfully"
            },
            "description": "deleteUserById"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/users/{id}/": {
      "put": {
        "description": "updateUserById",
        "operationId": "updateUserById",
        "tags": ["Users"],
        "parameters": [
          {
            "type": "number",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "email",
            "in": "body",
            "pattern": "timslovfoll@gmail.com",
            "required": true,
            "uniqueItems": true
          },
          {
            "type": "string",
            "name": "password",
            "in": "body",
            "pattern": "#$E12312Erwqe",
            "required": true
          },
          {
            "type": "string",
            "name": "phone",
            "in": "body",
            "pattern": "+38099559693943",
            "required": true,
            "uniqueItems": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            },
            "description": "updateUserById"
          },
          "400": {
            "description": "Error status_code 400",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "404": {
            "description": "Error status_code 404",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "firstName": {
          "type": "string",
          "example": "Stepan"
        },
        "lastName": {
          "type": "string",
          "example": "Orlov"
        },
        "age": {
          "type": "number",
          "example": 18
        },
        "phone": {
          "type": "string",
          "example": "+38099559693943"
        },
        "email": {
          "type": "string",
          "example": "timslovfoll@gmail.com"
        },
        "createdAt": {
          "type": "string",
          "example": "2022-04-11T14:57:23.471Z"
        },
        "deletedAt": {
          "type": "string",
          "default": null
        }
      }
    },
    "post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "type": "string",
          "example": "2022-04-11T14:57:23.471Z"
        },
        "deletedAt": {
          "type": "string",
          "default": null
        },
        "title": {
          "type": "string",
          "example": "Sky is closed"
        },
        "text": {
          "type": "string",
          "example": "Велика Британія запровадила кримінальне покарання проти будь-якого російського літака у її повітряному просторі.  «Ми придушимо здатність друзів Путіна продовжувати жити нормальним життям, поки гинуть тисячі безневинних людей», — завив він"
        },
        "userId": {
          "type": "number",
          "example": 5,
          "description": "Foreign fey for User"
        }
      }
    },
    "comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "type": "string",
          "example": "2022-04-11T14:57:23.471Z"
        },
        "deletedAt": {
          "type": "string",
          "default": null
        },
        "text": {
          "type": "string",
          "example": "Glory to Ukraine!!!"
        },
        "authorId": {
          "type": "number",
          "example": 1,
          "description": "Foreign fey for User"
        },
        "postId": {
          "type": "number",
          "example": 1,
          "description": "Foreign fey for Post"
        },
        "like": {
          "type": "number",
          "example": 1,
          "default": 0
        },
        "dislike": {
          "type": "number",
          "example": 1,
          "default": 0
        }
      }
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "Bad request",
          "description": "Standard error response"
        }
      }
    }
  }
}

